import * as Client from '../../client/Client.js';
import * as Review from '../../database/Review.js';
import * as MathHelper from '../../util/MathHelper.js';

export function createBuilder()
{
    return {
        _type: null,
        _params: [],
        _paramLength: 0,
        type(type)
        {
            this._type = type;
            return this;
        },
        param(index, type, description)
        {
            while (index >= this._params.length)
            {
                this._params.push(undefined);
            }
            
            if (typeof this._params[index] !== 'undefined')
            {
                throw new Error(`Parameter with index ${index} already added for builder.`);
            }

            this._params[index] = {
                type,
                description
            };
        },
        async build(id = MathHelper.uuid(), date = new Date(Date.now()))
        {
            const result = await Client.askPrompt(this._type, 'form', {
                choices: this._params.map((value, index) =>
                {
                    return {
                        name: value.type,
                        message: value.type,
                        hint: value.description,
                    }
                })
            });

            const params = [];
            for(const param of this._params)
            {
                params.push(result[param.type]);
            }

            return Review.createReview(uuid, date, 'Generated by Progress Auditor', this._type, params);
        }
    }
}
